# #####################################################################
# Note: Revert to a simpler matrix definition once the travis builtin
#       osx python build will be correctly configured.
# #####################################################################
#
# Execute this code installing *cogapp* from PyPI and then:
# `cog.py -r .travis.yml` to update inplace.
#[[[cog
#import cog
#PYTHON_VERSIONS = ('2.7', '3.3', '3.4', '3.5', '3.6')
#RUST_VERSIONS = {'1.13.0', 'nightly'}
#stable = open('.rust.stable').read().strip()
#RUST_VERSIONS.add(stable)
#allowed_failures = {'nightly'}
#includes = """\
#- language: generic
#  python: {pyver}
#  os: osx
#  env:
#    - RUST_VERSION={rustver} BREW_PYTHON={brew_python}\
#"""
#]]]
#[[[end]]]

os: linux
language: python
python:
 - 2.7
 - 3.3
env:
 - RUST_VERSION=1.13.0
 - RUST_VERSION=nightly

matrix:
  include:
    - os: osx
      language: generic
      python: 2.7
      env: RUST_VERSION=1.13.0 BREW_PYTHON=python27
    - os: osx
      language: generic
      python: 3.3
      env: RUST_VERSION=1.13.0 BREW_PYTHON=python33
    - os: osx
      language: generic
      python: 2.7
      env: RUST_VERSION=nighlty BREW_PYTHON=python27
    - os: osx
      language: generic
      python: 3.3
      env: RUST_VERSION=nighlty BREW_PYTHON=python33
  allow_failures:
    - os: osx
      language: generic
      python: 2.7
      env: RUST_VERSION=nighlty BREW_PYTHON=python27
    - os: osx
      language: generic
      python: 3.3
      env: RUST_VERSION=nighlty BREW_PYTHON=python33

#  Manually install python on osx
before_install:
  - if [[ $TRAVIS_OS_NAME == 'osx' && $BREW_PYTHON != 'python27' ]]; then ci/osx-install.sh; fi

install:
  - python -V
  - python -c "import sysconfig; print('\n'.join(map(repr,sorted(sysconfig.get_config_vars().items()))))"
  - mkdir ~/rust-installer
  - curl -sL https://static.rust-lang.org/rustup.sh -o ~/rust-installer/rustup.sh
  - sh ~/rust-installer/rustup.sh --prefix=~/rust --spec=$RUST_VERSION -y --disable-sudo
  - export PATH="$HOME/rust/bin:$PATH"
  - export PYTHON_LIB=$(python -c "import sysconfig; print(sysconfig.get_config_var('LIBDIR'))")
  - find $PYTHON_LIB
  - export LIBRARY_PATH="$LIBRARY_PATH:$PYTHON_LIB"
  - export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$PYTHON_LIB:$HOME/rust/lib"
  - rustc -V

script:
  - make test extensions
